managed implementation in class zbp_ml2023_employee unique;
strict ( 2 );

define behavior for ZR_ML2023_EMPLOYEE alias Employee
persistent table zml2023_employee
lock master
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;
  association _Request { create; }
 association _Claim { create; }



  field ( readonly, numbering : managed ) EmployeeUUID;
  field ( readonly ) CreatedAt;
  field ( readonly ) CreatedBy;
  field ( readonly ) LastChangedBy;
  field ( readonly ) LastChangedAt;
  field ( mandatory : create ) Entrydate;
  field ( readonly : update ) Entrydate;

  mapping for zml2023_employee corresponding
    {
      EmployeeUuid  = Employee_UUID;
      CreatedAt     = created_at;
      CreatedBy     = created_by;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
    }
}

define behavior for ZR_ML2023_REQUEST alias Request
persistent table zml2023_request
lock dependent by _Employee
authorization dependent by _Employee
//etag master <field_name>
{
  update;
  delete;

  action CancelRequest result [1] $self;

  action approverequest result [1] $self;

  validation ValidateDates on save { create; }

  determination DetermineStatus on modify { create; }

  determination DetermineHoliday on modify { create; }

  determination determineStatusP on modify { field Comment1; }

  field ( readonly, numbering : managed ) RequestUuid;
  field ( readonly ) Applicant;
  field ( mandatory : create ) Approver;
  field ( readonly : update ) Approver;
  field ( mandatory : create ) StartDate;
  field ( readonly : update ) StartDate;
  field ( mandatory : create ) EndDate;
  field ( readonly : update ) EndDate;
  field ( readonly ) Status;
  field ( readonly ) CreatedAt;
  field ( readonly ) CreatedBy;
  field ( readonly ) LastChangedBy;
  field ( readonly ) LastChangedAt;
  field ( readonly ) Holidays;
  association _Employee;



  mapping for zml2023_request corresponding
    {
      RequestUuid   = Request_UUID;
      CreatedAt     = created_at;
      CreatedBy     = created_by;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
    }
}

define behavior for ZR_ML2023_CLAIM alias Claim
persistent table zml2023_claim
lock dependent by _Employee
authorization dependent by _Employee
//etag master <field_name>
{
  update;
  delete;
  field ( readonly, numbering : managed ) ClaimUuid;
  field ( readonly ) EmployeeUuid;
  field ( readonly ) CreatedAt;
  field ( readonly ) CreatedBy;
  field ( readonly ) LastChangedBy;
  field ( readonly ) LastChangedAt;
  association _Employee;
  mapping for zml2023_claim corresponding
    {
      ClaimUuid     = claim_uuid;
      EmployeeUuid  = employee_uuid;
      CreatedAt     = created_at;
      CreatedBy     = created_by;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
    }
}